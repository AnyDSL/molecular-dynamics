fn move_particles(P: ParticleSystem, vector: ParticleVector) -> () {
    let start = P.start();
    let end = P.end();
    for k in $map_range(start(2), end(2)) {
        for j in map_range(start(1), end(1)) {
            for i in map_range(start(0), end(0)) @{
                let ic = [i,j,k];
                let mut q : &mut&mut ParticleList = P.head(index(ic, P.nc()));
                let mut node : &mut ParticleList = *q;
                while(node != 0 as &mut ParticleList) {    
                    let p = get_particle_from_node(node); 
                    boundary(p, P);
                    let kc = compute_cell_position(p, P);
                    let mut moving_node : &mut ParticleList;
                    if(ic(0) != kc(0) || ic(1) != kc(1) || ic(2) != kc(2)) {
                        moving_node = remove(q);
                        insert(P.head(index(kc, P.nc())), moving_node);
                        if(WALBERLA == false) {
                            vector.setDirtyBit(index(ic, vector.nc()), 1i8);
                            vector.setDirtyBit(index(kc, vector.nc()), 1i8);
                        }
                    }
                    else {
                        q = &mut ((*node).next);
                    }
                    node = (*q);
                }

            }
        }
    }
}
