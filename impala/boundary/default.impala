fn boundary(p: Particle, P: ParticleSystem) -> () {
    let mut x = p.getCoordinates().get();
    let mut change = false;
    let domain = P.domain().get();
    let ghost_layer = P.ghost_layer();
    let r_cut = P.constants().r_cut;
    let shadow_offset = P.shadow_offset();
    let coordinate_shift = P.coordinate_shift().get();

    for d in @map_range(SIZE_T_0, DIMENSION) {
        if(x(d) + shadow_offset + coordinate_shift(d) < 0.0) {
            x(d) = EPSILON - shadow_offset - coordinate_shift(d);
            change = true;
        }
        else if(x(d) + shadow_offset + coordinate_shift(d) > domain(d)) {
            x(d) = domain(d) - shadow_offset - EPSILON - coordinate_shift(d);
            change = true;
        }
    }
    if(change == true) {
        p.setCoordinates(get_vector(x));
    }
}   
