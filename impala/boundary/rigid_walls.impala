fn boundary(p: Particle, P: ParticleSystem) -> () {
    let mut x = p.getCoordinates().get();
    let mut change = false;
    let r_cut = P.constants().r_cut;
    let ghost_layer = P.ghost_layer();
    for d in @loop(0 as size_t, dimension()) {
        let lower = P.offset();
        let upper = P.l().get()(d) - lower;
        if(x(d) < lower) {
            x(d) = lower + epsilon();
            change = true;
        }
        else if(x(d) > upper) {
            x(d) = upper - epsilon();
            change = true;
        }
    }
    if(change == true) {
        p.setCoordinates(get_vector(x));
    }
}   
