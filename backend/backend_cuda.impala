fn @accelerator(dev: i32) -> Accelerator { cuda_accelerator(dev) }

static device_id = 0;
static gpu_math = cuda_intrinsics;
static atomic_add_global_i32 = cuda_atomic_add_global_i32;
static atomic_add_shared_i32 = cuda_atomic_add_shared;
static atomic_min_global_i32 = cuda_atomic_min_global_i32;
static atomic_min_shared_i32 = cuda_atomic_min_shared;
fn @atomic_add_f32(addr: &mut f32, val: f32) -> f32 { cuda_atomic_add_global_f32(addr as &mut[1] f32, val) }
fn @atomic_add_f64(addr: &mut f64, val: f64) -> f64 { cuda_atomic_add_global_f64(addr as &mut[1] f64, val) }

fn @is_nvvm() -> bool { false }
fn @is_cuda() -> bool { true }
fn @is_opencl() -> bool { false }
fn @is_amdgpu() -> bool { false }
fn @has_ldg() -> bool { true }
