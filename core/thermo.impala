fn temperature(grid: Grid) -> real_t {
    let mass = 1.0;
    let mvv2e = 1.0;
    let dof_boltz = grid.nparticles * 3 - 3;
    let t_scale = mvv2e / dof_boltz as real_t;
    let mut t = 0.0;
    let mut t_sum = 0.0;

    range(0, grid.nparticles, |i| {
        let vel = array_2d_get_vec3(array_host, ParticleDataLayout(), grid.velocities, i);
        t += vector_dot(vel, vel) * mass;
    });

    reduce_f64_sum(t, &mut t_sum);
    t_sum * t_scale
}

fn energy(eng_vdwl: real_t, half_nb: i32, grid: Grid) -> real_t {
    let e_act = eng_vdwl * 0.5 * select(half_nb == 0, 1.0, 2.0);
    let mut eng = 0.0;
    let mut nparticles = 0;

    reduce_f64_sum(e_act, &mut eng);
    reduce_i32_sum(grid.nparticles, &mut nparticles);

    eng / nparticles as real_t
}
