fn @is_x86() -> bool { false }
fn @is_sse() -> bool { false }
fn @is_avx() -> bool { false }
fn @is_avx2() -> bool { false }

fn @accelerator_allocate(size: i32) -> Buffer {
    let acc = accelerator(device_id);
    acc.alloc(size)
}

fn @transfer_between_devices(source: Buffer, destination: Buffer, size: i32) -> () {
    copy(source, destination, size);
}

fn @get_cluster_size() -> i32 {8}

fn outer_loop_accelerator(lower: i32, upper: i32, body: fn(i32, i32, i32) -> ()) -> () {
    let acc = accelerator(device_id);
    let grid = (upper - lower, 1, 1);
    let block = (get_cluster_size(), 1, 1);
    for tid, bid, bdim, gdim, gid in acc.exec(grid, block) {
        let (tidx, _, _) = tid;
        let tid_x = tidx();
        let (bidx, _, _) = bid;
        let bid_x = bidx();
        let (bdimx, _, _) = bdim;
        let bdim_x = bdimx();
        @@body(tid_x, bid_x, bdim_x);
    }
    acc.sync();
}
