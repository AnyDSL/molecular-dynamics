fn compute_total_kinetic_energy(grid: &Grid, outer_loop: fn(i32, i32, fn(i32) -> ()) -> (), inner_loop: fn(i32, i32, fn(i32) -> ()) -> ()) -> real_t {
    let mut kinetic_energy = 0.0;
    for cell, cell_index in map_over_grid(grid, outer_loop, inner_loop) {
        let masses = get_array_of_reals(cell.masses);
        let velocities = get_array_of_vectors(cell.velocities);
        for i in range(0, cell.size) {
            let velocity = math.sqrt(velocities(i).x * velocities(i).x + velocities(i).y * velocities(i).y + velocities(i).z * velocities(i).z);
            atomic_op_f64(&mut kinetic_energy, 0.5 * masses(i) * velocity, |a,b|{a+b});  
        }
    }
    kinetic_energy
}
