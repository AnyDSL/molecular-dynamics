static mut grid_allocated_bytes = 0 as i64;
static mut cell_allocated_bytes = 0 as i64;
static mut cluster_allocated_bytes = 0 as i64;
static mut neighborlist_allocated_bytes = 0 as i64;
static mut accelerator_grid_allocated_bytes = 0 as i64;
static mut mpi_allocated_bytes = 0 as i64;

fn add_grid_allocation(size: i32) -> () {
  grid_allocated_bytes += size as i64;
}

fn add_cell_allocation(size: i32) -> () {
  cell_allocated_bytes += size as i64;
}

fn add_cluster_allocation(size: i32) -> () {
  cluster_allocated_bytes += size as i64;
}

fn add_neighborlist_allocation(size:  i32) -> () {
  neighborlist_allocated_bytes += size as i64;
}

fn add_accelerator_grid_allocation(size: i32) -> () {
  accelerator_grid_allocated_bytes += size as i64;
}

fn add_mpi_allocation(size: i32) -> () {
  mpi_allocated_bytes += size as i64;
}

fn report_memory_allocation() -> () {
  print_string("Memory consumption report\n");

  print_string("\tGrid: ");
  print_i64(grid_allocated_bytes);
  print_string(" bytes\n");

  print_string("\tCells: ");
  print_i64(cell_allocated_bytes);
  print_string(" bytes\n");

  print_string("\tClusters: ");
  print_i64(cluster_allocated_bytes);
  print_string(" bytes\n");

  print_string("\tNeighbor List: ");
  print_i64(neighborlist_allocated_bytes);
  print_string(" bytes\n");

  print_string("\tAccelerator Grid: ");
  print_i64(accelerator_grid_allocated_bytes);
  print_string(" bytes\n");

  print_string("\tMPI: ");
  print_i64(mpi_allocated_bytes);
  print_string(" bytes\n");

  print_string("\tTotal: ");
  print_i64(
    grid_allocated_bytes +
    cell_allocated_bytes +
    cluster_allocated_bytes +
    neighborlist_allocated_bytes +
    accelerator_grid_allocated_bytes +
    mpi_allocated_bytes);
  print_string(" bytes\n");
}
