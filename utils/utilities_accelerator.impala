fn @get_real_accelerator(i: i32, buf: Buffer) -> real_t {
    bitcast[&[1][real_t]](buf.data)(i)
}

fn @set_real_accelerator(i: i32, buf: Buffer, value: real_t) -> () { 
    bitcast[&mut[1][real_t]](buf.data)(i) = value;
}

fn @get_array_of_reals_accelerator(buf: Buffer) -> &mut[1][real_t] {
    bitcast[&mut[1][real_t]](buf.data)
}

fn @get_u8_accelerator(i: i32, buf: Buffer) -> u8 {
    bitcast[&[1][u8]](buf.data)(i)
}

fn @set_u8_accelerator(i: i32, buf: Buffer, value: u8) -> () {
    bitcast[&mut[1][u8]](buf.data)(i) = value;
}

fn @get_i32_accelerator(i: i32, buf: Buffer) -> i32 {
    bitcast[&[1][i32]](buf.data)(i)
}

fn @set_i32_accelerator(i: i32, buf: Buffer, value: i32) -> () { 
    bitcast[&mut[1][i32]](buf.data)(i) = value;
}

fn @get_array_of_i32_accelerator(buf: Buffer) -> &mut[1][i32] {
    bitcast[&mut[1][i32]](buf.data)
}

fn @set_bool_accelerator(i: i32, buf: Buffer, value: bool) -> () {
    bitcast[&mut[1][bool]](buf.data)(i) = value;
}

fn @get_bool_accelerator(i: i32, buf: Buffer) -> bool {
    bitcast[&[1][bool]](buf.data)(i)
}
